#! /bin/bash

dir="$(dirname "$0")"

networking="${dir}/packages/network.list"
nmconf="/etc/NetworkManager/NetworkManager.conf"
function install_network {
  show_header "Setting up networking."
  check_installed $(cat ${networking})
  check_fail
  show_success "Networking applications installed."

  show_info "Setting up MAC address randomization in Network Manager."
  if ! test "$(grep "mac-address=random" ${nmconf})"; then
    sudo sh -c "echo "" >> ${nmconf}"
    sudo sh -c "echo '## Enabling built-in MAC Address randomization' >> ${nmconf}"
    sudo sh -c "echo '[connection-mac-randomization]' >> ${nmconf}"
    sudo sh -c "echo 'wifi.cloned-mac-address=random' >> ${nmconf}"
    sudo sh -c "echo 'ethernet.cloned-mac-address=random' >> ${nmconf}"
  fi
}

discovery="${dir}/packages/discover.list"
nsconf="/etc/nsswitch.conf"
function install_discovery {
  show_header "Setting up local network discovery."
  check_installed $(cat ${discovery})
  check_fail
  show_success "Discovery applications installed."

  show_info "Enabling local hostname resolution in Avahi."
  oldhostsline="hosts: files mymachines myhostname resolve \[!UNAVAIL=return\] dns"
  newhostsline="hosts: files mymachines myhostname mdns_minimal \[NOTFOUND=return\] resolve \[!UNAVAIL=return\] dns"
  sudo sed -i "/^${oldhostsline}/s/^${oldhostsline}/${newhostsline}/g" ${nsconf}
  sudo systemctl enable avahi-daemon.service
  sudo systemctl start avahi-daemon.service
}

firewall="${dir}/packages/firewall.list"
function install_firewall {
  show_header "Setting up firewall."
  check_installed $(cat ${firewall})
  check_fail
  show_success "Firewall packages installed."

  show_info "Enabling ufw."
  sudo ufw default deny
  sudo ufw allow Transmission
  sudo ufw enable
  sudo systemctl enable ufw
}

tor="${dir}/packages/tor.list"
function install_tor {
  show_header "Installing tor."
  check_installed $(cat ${tor})
  check_fail
  show_success "Tor installed."

  show_info "Enabling and starting tor service."
  sudo systemctl enable tor
  sudo systemctl start tor
}

srclist="/etc/apt/sources.list"
function use_onion_repos {
  show_header "Tunneling apt over tor for Debian $(lsb_release -sc)."

  grep -q contrib ${srclist}; is_contrib=$?
  grep -q non-free ${srclist}; is_nonfree=$?

  release=$(lsb_release -sc)
  sudo cp -f ${srclist} ${srclist}.${RANDOM}.bak
  sudo cp -f "${dir}/sources/${release}-sources.list" ${srclist}

  [ ${is_contrib} == 0 ] && \
    sudo sed -i "s,\(.* ${release} main.*\)$,\1 contrib,g" ${srclist} && \
    sudo sed -i "s,\(.* ${release}-updates main.*\)$,\1 contrib,g" ${srclist}
    sudo sed -i "s,\(.* ${release}-backports main.*\)$,\1 contrib,g" ${srclist}
  [ ${is_nonfree} == 0 ] && \
    sudo sed -i "s,\(.* ${release} main.*\)$,\1 non-free,g" ${srclist} && \
    sudo sed -i "s,\(.* ${release}-updates main.*\)$,\1 non-free,g" ${srclist}
    sudo sed -i "s,\(.* ${release}-backports main.*\)$,\1 non-free,g" ${srclist}
  sudo sed -i "s,https://deb.debian.org,tor+http://vwakviie2ienjx6t.onion,g" ${srclist}
  sudo sed -i "s,https://security.debian.org/,tor+http://sgvtcaew4bxjd7ln.onion/debian-security/,g" ${srclist}

  sudo apt update
}

function 03-network {
  show_question "Network: what do you want to install?"
  show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"

  options=("Back" "All" "Networking" "Local discovery" "Firewall" "Install tor" \
           "Tunnel apt over tor")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        install_network
        install_discovery
        install_firewall
        install_tor
        use_onion_repos
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Networking")
        install_network
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Local discovery")
        install_discovery
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Firewall")
        install_firewall
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Install tor")
        install_tor
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Tunnel apt over tor")
        install_tor
        use_onion_repos
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done
}
