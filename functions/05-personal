#! /bin/bash

dir="$(dirname "$0")"

# Globals
gtktheme="Plata-Noir-Compact"
icontheme="Papirus-Dark"
font="Roboto"

function select_system_font {
  show_question "Select a font family:"

  options=("Back" "Noto" "Roboto")
  select option in "${options[@]}"; do
    case ${option} in
      "Back")
        return
        break
        ;;
      "Noto")
        if dpkg -s fonts-noto > /dev/null 2>&1; then
          font="Noto"
        else
          show_warning "Font family ${option} not found. Skipping."
        fi
        break
        ;;
      "Roboto")
        if dpkg -s fonts-roboto > /dev/null 2>&1; then
          font="Roboto"
        else
          show_warning "Font family ${option} not found. Skipping."
        fi
        break
        ;;
      *)
        show_error "Font ${option} not supported."
        exit 3
        ;;
    esac
  done

  set_system_font
}

function set_system_font {
  show_header "Setting system font to ${font}."

  case "${font}" in
    "Roboto")
      if dpkg -s cinnamon >/dev/null 2>&1; then
        show_info "Setting fonts for Cinnamon desktop environment."

        # screensaver fonts
        gsettings set org.cinnamon.desktop.screensaver font-message "'Roboto 14'"
        gsettings set org.cinnamon.desktop.screensaver font-date "'Roboto 24'"
        gsettings set org.cinnamon.desktop.screensaver font-time "'Roboto 64'"

        # desktop environment fonts
        gsettings set org.cinnamon.desktop.interface font-name "'Roboto 10.3'"
        gsettings set org.nemo.desktop font "'Roboto 10.3'"
        gsettings set org.gnome.desktop.interface document-font-name "'Roboto 10.3'"
        gsettings set org.gnome.desktop.interface monospace-font-name "'Ubuntu Mono 12.7'"
        gsettings set org.cinnamon.desktop.wm.preferences titlebar-font "'Roboto Medium 10.3'"
      fi

      if dpkg -s gnome-shell >/dev/null 2>&1; then
        show_info "Setting fonts for GNOME environment."

        # desktop environment fonts
        gsettings set org.gnome.desktop.wm.preferences titlebar-font "'Roboto Medium 10.3'"
        gsettings set org.gnome.desktop.interface document-font-name "'Roboto 10.3'"
        gsettings set org.gnome.desktop.interface font-name "'Roboto 10.3'"
        gsettings set org.gnome.desktop.interface monospace-font-name "'Ubuntu Mono 12.7'"
      fi
      ;;
    "Noto")
      if dpkg -s cinnamon >/dev/null 2>&1; then
        show_info "Setting fonts for Cinnamon desktop environment."

        # screensaver fonts
        gsettings set org.cinnamon.desktop.screensaver font-message "'Noto Sans 14'"
        gsettings set org.cinnamon.desktop.screensaver font-date "'Noto Sans 24'"
        gsettings set org.cinnamon.desktop.screensaver font-time "'Noto Sans 64'"

        # desktop environment fonts
        gsettings set org.cinnamon.desktop.interface font-name "'Noto Sans 10.3'"
        gsettings set org.nemo.desktop font "'Noto Sans 10.3'"
        gsettings set org.gnome.desktop.interface document-font-name "'Noto Sans 10.3'"
        gsettings set org.gnome.desktop.interface monospace-font-name "'Ubuntu Mono 12.7'"
        gsettings set org.cinnamon.desktop.wm.preferences titlebar-font "'Noto Sans Medium 10.3'"
      fi

      if dpkg -s gnome-shell > /dev/null 2>&1; then
        show_info "Setting fonts for GNOME environment."

        # desktop environment fonts
        gsettings set org.gnome.desktop.wm.preferences titlebar-font "'Noto Sans Medium 10.3'"
        gsettings set org.gnome.desktop.interface document-font-name "'Noto Sans 10.3'"
        gsettings set org.gnome.desktop.interface font-name "'Noto Sans 10.3'"
        gsettings set org.gnome.desktop.interface monospace-font-name "'Ubuntu Mono 12.7'"
      fi
      ;;
    *)
      show_error "Font ${1} not supported."
      exit 3
      ;;
  esac
}

xdgdefaultconf="/etc/xdg/user-dirs.defaults"
function set_icon_theme {
  show_header "Setting desktop icon theme to ${icontheme}."

  if dpkg -s cinnamon > /dev/null 2>&1; then
    show_info "Setting Cinnamon icon theme to ${icontheme}."
    gsettings set org.cinnamon.desktop.interface icon-theme "'${icontheme}'"
  fi
  if dpkg -s gnome-shell > /dev/null 2>&1; then
    show_info "Setting GNOME icon theme to ${icontheme}."
    gsettings set org.gnome.desktop.interface icon-theme "'${icontheme}'"
  fi

  if [[ "${icontheme}" =~ "Papirus" ]]; then
    show_info "Creating Projects/ and Sync/ and setting gvfs metadata."
    mkdir -p ${HOME}/Projects
    gio set ${HOME}/Projects/ -t string \
      metadata::custom-icon-name folder-development
    mkdir -p ${HOME}/Sync
    gio set ${HOME}/Sync/ -t string \
      metadata::custom-icon-name folder-cloud
  fi

  show_info "Disabling Templates/ and Public/ folders."
  sudo sed -i "s/^TEMPLATES/#TEMPLATES/g" ${xdgdefaultconf}
  sudo sed -i "s/^PUBLICSHARE/#PUBLICSHARE/g" ${xdgdefaultconf}
  rm -rf ${HOME}/Templates
  rm -rf ${HOME}/Public
}

function set_gtk_theme {
  show_header "Setting desktop GTK theme to ${gtktheme}."
  if dpkg -s cinnamon > /dev/null 2>&1; then
    show_info "Setting Cinnamon GTK theme to ${gtktheme}."
    gsettings set org.cinnamon.desktop.interface gtk-theme "'${gtktheme}'"
    if [[ "${gtktheme}" =~ "-Eta" ]]; then
      gsettings set org.cinnamon.theme name "'${gtktheme%-*}'"
      gsettings set org.cinnamon.desktop.wm.preferences theme "'${gtktheme}'"
    elif [[ "${gtktheme}" =~ "-Compact" ]]; then
      gsettings set org.cinnamon.theme name "'${gtktheme%-*}'"
      gsettings set org.cinnamon.desktop.wm.preferences theme "'${gtktheme}'"
    elif [[ "${gtktheme}" =~ "-Darker" ]]; then
      gsettings set org.cinnamon.theme name "'${1%er}'"
    else
      gsettings set org.cinnamon.theme name "'${gtktheme}'"
    fi
  fi
  if dpkg -s gnome-shell > /dev/null 2>&1; then
    show_info "Setting GNOME GTK theme to ${gtktheme}."
    gsettings set org.gnome.desktop.wm.preferences theme "'${gtktheme}'"
    gsettings set org.gnome.desktop.interface gtk-theme "'${gtktheme}'"
    gnome-shell-extension-tool -e "user-theme@gnome-shell-extensions.gcampax.github.com" || true
    gsettings set org.gnome.shell.extensions.user-theme name "'${gtktheme}'"
  fi
}

lightdmgtkconf="/etc/lightdm/lightdm-gtk-greeter.conf"
function set_lightdm_theme {
  if dpkg -s lightdm-gtk-greeter > /dev/null 2>&1; then
    show_header "Setting LightDM login GTK theme to ${gtktheme}."
    sudo sed -i "s/^#theme-name=$/theme-name=/g" ${lightdmgtkconf}
    sudo sed -i "s/^theme-name=.*/theme-name=${gtktheme}/g" ${lightdmgtkconf}
    sudo sed -i "s/^#icon-theme-name=$/icon-theme-name=/g" ${lightdmgtkconf}
    sudo sed -i "s/^icon-theme-name=.*$/icon-theme-name=${icontheme}/g" ${lightdmgtkconf}
    if [[ "${font}" == "Noto" ]]; then
      if dpkg -s fonts-noto > /dev/null; then
        sudo sed -i "s/^#font-name=$/font-name=/g" ${lightdmgtkconf}
        sudo sed -i "s/^font-name=.*/font-name=Noto Sans/g" ${lightdmgtkconf}
      fi
    elif [[ "${font}" == "Roboto" ]]; then
      if dpkg -s fonts-roboto > /dev/null; then
        sudo sed -i "s/^#font-name=$/font-name=/g" ${lightdmgtkconf}
        sudo sed -i "s/^font-name=.*/font-name=Roboto/g" ${lightdmgtkconf}
      fi
    fi
    sudo sed -i "s/^#xft-hintstyle=$/xft-hintstyle=/g" ${lightdmgtkconf}
    sudo sed -i "s/^xft-hintstyle=.*$/xft-hintstyle=slight/g" ${lightdmgtkconf}
  else
    show_warning "LightDM GTK greeter not installed. Skipping."
  fi
}

function set_gdm_theme {
  if dpkg -s gdm3 > /dev/null 2>&1; then
    if [[ -d "/usr/share/themes/${gtktheme}" ]]; then
      show_header "Setting GDM login theme to ${gtktheme}."
      sudo cp -r /usr/share/gnome-shell /usr/share/gnome-shell-$(date +%Y%m%d)
      sudo cp -rf /usr/share/themes/${gtktheme}/gnome-shell/* /usr/share/gnome-shell/
      if [[ "${gtktheme}" =~ "Adapta" ]] || [[ "${gtktheme}" =~ "Plata" ]]; then
        sudo cp -f /usr/share/themes/${gtktheme}/gnome-shell/extensions/window-list/classic.css \
          /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com/
        sudo cp -f /usr/share/themes/${gtktheme}/gnome-shell/extensions/window-list/stylesheet.css \
          /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com/
      fi
    else
      show_warning "GTK theme ${gtktheme} not found. Skipping."
    fi
  else
    show_warning "GDM is not installed. Skipping."
  fi
}

gtksettings="${HOME}/.config/gtk-3.0/settings.ini"
function set_dark_gtk {
  show_header "Setting global dark theme for gtk applications."
  if grep ^gtk-application-prefer-dark-theme= ${gtksettings} >/dev/null 2>&1; then
    isgtkdark=$(grep ^gtk-application-prefer-dark-theme= ${gtksettings} | cut -d"=" -f2)
    if test "${isgtkdark}"; then
      show_info "Desktop is already set to use dark GTK variants."
    else
      sed -i "s/^gtk-application-prefer-dark-theme=${isgtkdark}$/gtk-application-prefer-dark-theme=1/g" "${gtksettings}"
    fi
  else
    if [ -f "${gtksettings}" ]; then
      echo "" >> "${gtksettings}"
    else
      mkdir -p $(dirname ${gtksettings}) && touch "${gtksettings}"
    fi
    echo "[Settings]" >> "${gtksettings}"
    echo "gtk-application-prefer-dark-theme=1" >> "${gtksettings}"
  fi
}

cinnamondconf="${dir}/dconf/cinnamon.dconf"
function import_cinnamon_dconf {
  show_header "Importing Cinnamon dconf settings."
  dconf load / < "${cinnamondconf}"
  check_fail
  show_success "Cinnamon dconf settings imported."
}

gnomedconf="${dir}/dconf/gnome.dconf"
function import_gnome_dconf {
  show_header "Importing GNOME dconf settings."
  dconf load / < "${gnomedconf}"
  check_fail
  show_success "GNOME dconf settings imported."
}

appsdconf="${dir}/dconf/apps.dconf"
function import_apps_dconf {
  show_header "Importing application dconf settings."
  dconf load / < "${appsdconf}"
  check_fail
  show_success "Application dconf settings imported."
}

terminaldconf="${dir}/dconf/terminal.dconf"
function import_terminal_dconf {
  show_header "Importing terminal profiles."
  dconf load / < "${terminaldconf}"
  check_fail
  show_success "GNOME terminal profiles imported."
}

gdmconf="/etc/gdm/custom.conf"
lightdmconf="/etc/lightdm/lightdm.conf"
function enable_autologin {
  show_header "Enabling automatic login for ${USER}."
  if dpkg -s gdm > /dev/null 2>&1; then
    show_info "Log in as ${USER} via GDM."
    ! [ -f ${gdmconf} ] && sudo touch ${gdmconf} || true
    if ! test "$(grep ^AutomaticLogin=${USER} ${gdmconf})"; then
      ! [ $(grep '^\[daemon\]' "${gdmconf}") ] && \
        sudo sh -c 'echo "[daemon]" >> /etc/gdm/custom.conf' || true
      sudo sed -i "/^\[daemon\]$/a AutomaticLogin=${USER}" ${gdmconf}
      sudo sed -i "/^AutomaticLogin=/a AutomaticLoginEnable=True" ${gdmconf}
    else
      sudo sed -i "s/^AutomaticLogin=.*$/AutomaticLogin=${USER}/g" ${gdmconf}
      sudo sed -i "s/^AutomaticLoginEnable=.*$/AutomaticLoginEnable=True/g" ${gdmconf}
    fi
  fi
  if dpkg -s lightdm > /dev/null 2>&1; then
    show_info "Log in as ${USER} via LightDM."
    sudo sed -i "s/^#autologin-user=/autologin-user=/g" ${lightdmconf}
    sudo sed -i "s/^#autologin-user-timeout=/autologin-user-timeout=/g" ${lightdmconf}
    sudo sed -i "s/^autologin-user=.*$/autologin-user=${USER}/g" ${lightdmconf}
  fi
  show_success "Autologin enabled."
}

grubdefault="/etc/default/grub"
function invert_brightness {
  if [ -f "${grubdefault}" ]; then
    local oldine
    local bootparams
    oldline=$(grep ^GRUB_CMDLINE_LINUX= "${grubdefault}")
    bootparams=$(echo "${oldline}" | sed -n "s/^GRUB_CMDLINE_LINUX=\"\(.*\)\"/\1/p")
    show_header "Inverting display brightness (Intel i915)."
    if [[ ${bootparams} =~ i915.invert_brightness= ]]; then
      sudo sed -i "s|i915.invert_brightness=\(on\|off\|1\|0\)|i915.invert_brightness=1|g" ${grubdefault}
    else
      if test "${bootparams}"; then
        sudo sed -i "s|${bootparams}|${bootparams} i915.invert_brightness=1|g" ${grubdefault}
      else
        sudo sed -i "s|${oldline}|GRUB_CMDLINE_LINUX=\"i915.invert_brightness=1\"|g" ${grubdefault}
      fi
      sudo sed -i "\|^GRUB_CMDLINE_LINUX=| a\#${oldline}" ${grubdefault} # backup
      show_success "Brightness inverted."
      sudo update-grub
    fi
  fi
  if [[ "$(sudo bootctl is-installed)" = yes ]]; then
    local cmdline
    for entry in "$(bootctl -p)"/loader/entries/*.conf; do
      cmdline=$(sed -n "s/^options\s\+\(.*\)/\1/p" "${entry}")
      if [[ ${cmdline} =~ i915.invert_brightness= ]]; then
        sudo sed -i "s|i915.invert_brightness=\(1\|0\)|i915.invert_brightness=1|g" "${entry}"
      else
        if test "${cmdline}"; then
          sudo sed -i "s|${cmdline}|${cmdline} i915.invert_brightness=1|g" ${grubdefault}
        else
          echo "options	i915.invert_brightness=1" | sudo tee -a "${entry}"
        fi
      fi
    done
  fi
}

grubdefault="/etc/default/grub"
grubcfg="/boot/grub/grub.cfg"
function enable_intel_iommu {
  if [ -f "${grubdefault}" ]; then
    local oldline
    local bootparams
    oldline=$(grep ^GRUB_CMDLINE_LINUX= "${grubdefault}")
    bootparams=$(echo "${oldline}" | sed -n "s/^GRUB_CMDLINE_LINUX=\"\(.*\)\"/\1/p")
    show_info "Setting Intel IOMMU kernel parameter."
    if [[ ${bootparams} =~ intel_iommu= ]]; then
      sudo sed -i "s|intel_iommu=\(on\|off\|0\|1\)|intel_iommu=on|g" ${grubdefault}
    else
      if test "${bootparams}"; then
        sudo sed -i "s|${bootparams}|${bootparams} intel_iommu=on|g" ${grubdefault}
      else
        sudo sed -i "s|${oldline}|GRUB_CMDLINE_LINUX=\"intel_iommu=on\"|g" ${grubdefault}
      fi
      sudo sed -i "\|^GRUB_CMDLINE_LINUX=| a\#${oldline}" ${grubdefault} # backup
      sudo grub-mkconfig -o ${grubcfg}
    fi
  fi
  if [[ "$(sudo bootctl is-installed)" = yes ]]; then
    local cmdline
    for entry in "$(bootctl -p)"/loader/entries/*.conf; do
      cmdline=$(sed -n "s/^options\s\+\(.*\)/\1/p" "${entry}")
      if [[ ${cmdline} =~ intel_iommu= ]]; then
        sudo sed -i "s|intel_iommu=\(1\|0\)|intel_iommu=on|g" "${entry}"
      else
        if test "${cmdline}"; then
          sudo sed -i "s|${cmdline}|${cmdline} intel_iommu=on|g" ${grubdefault}
        else
          echo "options	intel_iommu=on" | sudo tee -a "${entry}"
        fi
      fi
    done
  fi
}

pulseconfig="/etc/pulse/default.pa"
function disable_pulseaudio_suspend {
  show_header "Disabling suspend on PulseAudio when sinks/sources idle."
  if [ -f ${pulseconfig} ]; then
    sudo sed -i "s/^load-module module-suspend-on-idle$/#load-module module-suspend-on-idle/g" ${pulseconfig}
  else
    show_warning "PulseAudio config file missing. Exiting."
  fi
}

iwlwificonf="/etc/modprobe.d/iwlwifi.conf"
function disable_11n {
  show_header "Disabling 802.11n networking in iwlwifi."
  if ! [ "$(ls -A /etc/modprobe.d/)" ]; then
    sudo sh -c "echo 'options iwlwifi 11n_disable=1' >> ${iwlwificonf}"
  else
    if ! find /etc/modprobe.d/ -type f \
         -exec grep "^options iwlwifi .*11n_disable=1.*" {} + >/dev/null 2>&1; then
      sudo sh -c "echo 'options iwlwifi 11n_disable=1' >> ${iwlwificonf}"
    else
      show_info "11n_disable=1 flag is already set."
    fi
  fi
  show_success "802.11n networking disabled in ${iwlwificonf}."
}

autostartdir="${HOME}/.config/autostart"
scriptdir="${HOME}/.scripts"
batterydaemon="${dir}/daemons/battery.desktop"
function install_scripts {
  show_header "Installing misc. scripts to the ${HOME}/.scripts folder."
  if [ -d "${HOME}/.scripts" ]; then
    git -C "${HOME}/.scripts" pull
  else
    git clone https://github.com/sudorook/misc-scripts "${scriptdir}"
  fi
  show_success "Installed."

  show_info "Setting up battery notifications."
  mkdir -p "${autostartdir}"
  cat "${batterydaemon}" | sed -e "s,@misc-scripts@,${scriptdir},g" \
    > "${autostartdir}/Battery Watchdog.desktop"
}

function select_desktop_theme {
  show_question "Select a GTK theme:"

  options=("Back" "Adwaita" "Arc" "Arc-Darker" "Arc-Dark" "Adapta" \
           "Adapta-Eta" "Adapta-Nokto" "Adapta-Nokto-Eta" "Plata" \
           "Plata-Compact" "Plata-Lumine" "Plata-Lumine-Compact" "Plata-Noir" \
           "Plata-Noir-Compact")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        return
        break
        ;;
      "Adwaita")
        if [ -d /usr/share/themes/Adwaita ] || \
           [ -d "${HOME}/.themes/Adwaita" ]; then
          gtktheme="Adwaita"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc")
        if [ -d /usr/share/themes/Arc ] || \
           [ -d "${HOME}/.themes/Arc" ]; then
          gtktheme="Arc"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc-Darker")
        if [ -d /usr/share/themes/Arc-Darker ] || \
           [ -d "${HOME}/.themes/Arc-Darker" ]; then
          gtktheme="Arc-Darker"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Arc-Dark")
        if [ -d /usr/share/themes/Arc-Dark ] || \
           [ -d "${HOME}/.themes/Arc-Dark" ]; then
          gtktheme="Arc-Dark"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta")
        if [ -d /usr/share/themes/Adapta ] || \
           [ -d "${HOME}/.themes/Adapta" ]; then
          gtktheme="Adapta"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Eta")
        if [ -d /usr/share/themes/Adapta-Eta ] || \
           [ -d "${HOME}/.themes/Adapta-Eta" ]; then
          gtktheme="Adapta-Eta"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Nokto")
        if [ -d /usr/share/themes/Adapta-Nokto ] || \
           [ -d "${HOME}/.themes/Adapta-Nokto" ]; then
          gtktheme="Adapta-Nokto"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Adapta-Nokto-Eta")
        if [ -d /usr/share/themes/Adapta-Nokto-Eta ] || \
           [ -d "${HOME}/.themes/Adapta-Nokto-Eta" ]; then
          gtktheme="Adapta-Nokto-Eta"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata")
        if [ -d /usr/share/themes/Plata ] || \
           [ -d "${HOME}/.themes/Plata" ]; then
          gtktheme="Plata"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata-Compact")
        if [ -d /usr/share/themes/Plata-Compact ] || \
           [ -d "${HOME}/.themes/Plata-Compact" ]; then
          gtktheme="Plata-Compact"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata-Lumine")
        if [ -d /usr/share/themes/Plata-Lumine ] || \
           [ -d "${HOME}/.themes/Plata-Lumine" ]; then
          gtktheme="Plata-Lumine"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata-Lumine-Compact")
        if [ -d /usr/share/themes/Plata-Lumine-Compact ] || \
           [ -d "${HOME}/.themes/Plata-Lumine-Compact" ]; then
          gtktheme="Plata-Lumine-Compact"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata-Noir")
        if [ -d /usr/share/themes/Plata-Noir ] || \
           [ -d "${HOME}/.themes/Plata-Noir" ]; then
          gtktheme="Plata-Noir"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      "Plata-Noir-Compact")
        if [ -d /usr/share/themes/Plata-Noir-Compact ] || \
           [ -d "${HOME}/.themes/Plata-Noir-Compact" ]; then
          gtktheme="Plata-Noir-Compact"
        else
          show_warning "${option} theme is not installed."
          select_desktop_theme
        fi
        break
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done

  set_gtk_theme
  set_lightdm_theme
  set_gdm_theme
}

function select_icon_theme {
  show_question "Select an icon theme:"

  options=("Back" "Papirus" "ePapirus" "Papirus-Light" "Papirus-Dark" \
           "Papirus-Adapta" "Papirus-Adapta-Nokto")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        return
        break
        ;;
      "Papirus")
        if [ -d /usr/share/icons/Papirus ] || \
           [ -d "${HOME}/.icons/Papirus" ]; then
          icontheme="Papirus"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "ePapirus")
        if [ -d /usr/share/icons/ePapirus ] || \
           [ -d "${HOME}/.icons/ePapirus" ]; then
          icontheme="ePapirus"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Light")
        if [ -d /usr/share/icons/Papirus-Light ] || \
           [ -d "${HOME}/.icons/Papirus-Light" ]; then
          icontheme="Papirus-Light"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Dark")
        if [ -d /usr/share/icons/Papirus-Dark ] || \
           [ -d "${HOME}/.icons/Papirus-Dark" ]; then
          icontheme="Papirus-Dark"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Adapta")
        if [ -d /usr/share/icons/Papirus-Adapta ] || \
           [ -d "${HOME}/.icons/Papirus-Adapta" ]; then
          icontheme="Papirus-Adapta"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      "Papirus-Adapta-Nokto")
        if [ -d /usr/share/icons/Papirus-Adapta-Nokto ] || \
           [ -d "${HOME}/.icons/Papirus-Adapta-Nokto" ]; then
          icontheme="Papirus-Adapta-Nokto"
        else
          show_warning "${option} icons are not installed."
          select_icon_theme
        fi
        break
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done

  set_icon_theme
  set_lightdm_theme
}

function 05-personal {
  show_question "Personal: what do you want to set?"
  show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"

  options=("Back" "All" "Select system fonts" "Select icon theme" \
           "Select desktop theme" "Set dark GTK" "Import Cinnamon dconf" \
           "Import GNOME dconf" "Import application dconf" \
           "Import GNOME terminal profiles" "Enable autologin" \
           "Invert brightness (i915)" "Enable IOMMU (i915)" \
           "Disable PulseAudio suspend" "Disable 802.11n" "Add scripts")
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        set_system_font
        set_icon_theme
        set_gtk_theme
        set_lightdm_theme
        set_gdm_theme
        set_dark_gtk
        import_cinnamon_dconf
        import_gnome_dconf
        import_apps_dconf
        import_terminal_dconf
        enable_autologin
        invert_brightness
        enable_intel_iommu
        disable_pulseaudio_suspend
        disable_11n
        install_scripts
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Select system fonts")
        select_system_font
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Select icon theme")
        select_icon_theme
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Select desktop theme")
        select_desktop_theme
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Set dark GTK")
        set_dark_gtk
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import Cinnamon dconf")
        import_cinnamon_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import GNOME dconf")
        import_gnome_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import application dconf")
        import_apps_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Import GNOME terminal profiles")
        import_terminal_dconf
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Enable autologin")
        enable_autologin
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Invert brightness (i915)")
        invert_brightness
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Enable IOMMU (i915)")
        enable_intel_iommu
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Disable PulseAudio suspend")
        disable_pulseaudio_suspend
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      "Disable 802.11n")
        disable_11n
        show_info "Main\n ${endbranch} Network (Hit ENTER to see options again.)"
        ;;
      "Add scripts")
        install_scripts
        show_info "Main\n ${endbranch} Personal (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        ;;
    esac
  done
}
