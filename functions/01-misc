#! /bin/bash

dir="$(dirname "$0")"

zsh="${dir}/packages/zsh.list"
zshrc="${dir}/dotfiles/zshrc"
function install_zsh {
  show_header "Installing zsh."
  check_installed $(cat ${zsh})
  check_fail
  show_success "zsh installed."

  show_info "Copying zshrc."
  cp -f "${zshrc}" "${HOME}/.zshrc"

  if ! test $(getent passwd `whoami` | grep "zsh"); then
    show_info "Changing login shell to zsh. Provide your password."
    chsh -s /bin/zsh
  fi
}

selinux="${dir}/packages/selinux.list"
function install_selinux {
  show_header "Installing SELinux and setting rules."
  check_installed $(cat ${selinux})
  check_fail
  show_success "SELinux installed."

  show_info "Activating SELinux."
  sudo selinux-activate

  if [ -f /etc/default/grub ]; then
    show_info "Updating GRUB kernel command line."
    local cmdline
    cmdline="$(sed -n "s|^GRUB_CMDLINE_LINUX=\"\(.*\)\"|\1|p" /etc/default/grub)"
    if ! [[ "${cmdline}" =~ security=selinux ]]; then
      sed -i "s|^GRUB_CMDLINE_LINUX=\"${cmdline}\"|GRUB_CMDLINE_LINUX=\"${cmdline} security=selinux selinux=1\"|g" /etc/default/grub
    fi
  fi

  if [[ "$(sudo bootctl is-installed)" = "yes" ]]; then
    show_info "Updating systemd-boot kernel command line(s)."
    local cmdline
    local efidir
    efidir="$(bootctl -p)"
    for entry in ${efidir}/loader/entries/*.conf; do
      cmdline="$(sed -n "s/^options\s\+\(.*\)/\1/p" "${entry}")"
      if ! [[ "${cmdline}" =~ security=selinux ]]; then
        sed -i "s|^options\(\s\+\)${cmdline}|options\1${cmdline} selinux=1 security=selinux|g" "${entry}"
      fi
    done
  fi

  show_success "SELinux setup complete."
  show_info \
    "Reboot the computer to start using SELinux. It will be in permissive" \
    "mode by default." \
    "Run # sestatus after rebooting to verify that SELinux is installed " \
    "properly." \
    "To start enforcing policies, add 'enforcing=1' to the kernel command line" \
    "in /etc/default/grub."
}

utils="${dir}/packages/utils.list"
function install_utils {
  show_header "Installing general utilities."
  check_installed $(cat ${utils})
  check_fail
  show_success "Utilities installed."
}

laptop="${dir}/packages/laptop.list"
function install_laptop {
  show_header "Installing laptop utilities."
  check_installed $(cat ${laptop})
  check_fail
  show_success "Laptop utilities installed."

  # Enable tlp on laptops.
  show_info "Enabling and starting tlp systemd units."
  sudo systemctl enable tlp.service
  sudo systemctl start tlp.service
  show_success "tlp enabled."
}

function 01-misc {
  show_question "Misc: what do you want to install?"
  show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"

  options=("Back" "All" "SELinux" "Linux utilities" "Laptop tools" "zsh" )
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        install_utils
        install_laptop
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "SELinux")
        install_selinux
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux utilities")
        install_utils
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Laptop tools")
        install_laptop
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "zsh")
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
    esac
  done
}
